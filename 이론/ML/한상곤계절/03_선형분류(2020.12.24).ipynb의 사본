{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"03_선형분류(2020.12.24).ipynb의 사본","provenance":[{"file_id":"1bSIdJEGLIbag4XN4UlqvCkPPU6uUYK4d","timestamp":1609145677288}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"37FA_ShnZx2b"},"source":["# 선형분류"]},{"cell_type":"code","metadata":{"id":"7t7KeYAoa5Tp"},"source":["import numpy as np\r\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8AyML4ZsaZ3X"},"source":["## 데이터 준비"]},{"cell_type":"code","metadata":{"id":"aB4FaCOgbRNU"},"source":["from sklearn.datasets import load_breast_cancer\r\n","cancer = load_breast_cancer()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"naVU4dwEbasG","executionInfo":{"status":"ok","timestamp":1609079162180,"user_tz":-540,"elapsed":2466,"user":{"displayName":"Sangkon Han","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiQsYWJn8z5Q-S2Cvsutdwzy6mD8-C0PRb5ZODrY5M=s64","userId":"11611818706289122316"}},"outputId":"13911d06-a992-46f9-e6f4-21ab3381f427"},"source":["print(cancer.data.shape, cancer.target.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(569, 30) (569,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qDjvqAQncFvB","executionInfo":{"status":"ok","timestamp":1609079162180,"user_tz":-540,"elapsed":2463,"user":{"displayName":"Sangkon Han","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiQsYWJn8z5Q-S2Cvsutdwzy6mD8-C0PRb5ZODrY5M=s64","userId":"11611818706289122316"}},"outputId":"6282b42f-4508-43bb-f4c9-64aa68d1f3e9"},"source":["cancer.data[:3] # 데이터 3개까지 뽑은거임 (2개아님 3개다)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.799e+01, 1.038e+01, 1.228e+02, 1.001e+03, 1.184e-01, 2.776e-01,\n","        3.001e-01, 1.471e-01, 2.419e-01, 7.871e-02, 1.095e+00, 9.053e-01,\n","        8.589e+00, 1.534e+02, 6.399e-03, 4.904e-02, 5.373e-02, 1.587e-02,\n","        3.003e-02, 6.193e-03, 2.538e+01, 1.733e+01, 1.846e+02, 2.019e+03,\n","        1.622e-01, 6.656e-01, 7.119e-01, 2.654e-01, 4.601e-01, 1.189e-01],\n","       [2.057e+01, 1.777e+01, 1.329e+02, 1.326e+03, 8.474e-02, 7.864e-02,\n","        8.690e-02, 7.017e-02, 1.812e-01, 5.667e-02, 5.435e-01, 7.339e-01,\n","        3.398e+00, 7.408e+01, 5.225e-03, 1.308e-02, 1.860e-02, 1.340e-02,\n","        1.389e-02, 3.532e-03, 2.499e+01, 2.341e+01, 1.588e+02, 1.956e+03,\n","        1.238e-01, 1.866e-01, 2.416e-01, 1.860e-01, 2.750e-01, 8.902e-02],\n","       [1.969e+01, 2.125e+01, 1.300e+02, 1.203e+03, 1.096e-01, 1.599e-01,\n","        1.974e-01, 1.279e-01, 2.069e-01, 5.999e-02, 7.456e-01, 7.869e-01,\n","        4.585e+00, 9.403e+01, 6.150e-03, 4.006e-02, 3.832e-02, 2.058e-02,\n","        2.250e-02, 4.571e-03, 2.357e+01, 2.553e+01, 1.525e+02, 1.709e+03,\n","        1.444e-01, 4.245e-01, 4.504e-01, 2.430e-01, 3.613e-01, 8.758e-02]])"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"mcGkBTm7cj7J","executionInfo":{"status":"ok","timestamp":1609079162493,"user_tz":-540,"elapsed":2773,"user":{"displayName":"Sangkon Han","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiQsYWJn8z5Q-S2Cvsutdwzy6mD8-C0PRb5ZODrY5M=s64","userId":"11611818706289122316"}},"outputId":"b2665635-106f-456f-d8b1-3075ed9f925c"},"source":["plt.boxplot(cancer.data)\r\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wCf9dy2wcrpC","executionInfo":{"status":"ok","timestamp":1609079162493,"user_tz":-540,"elapsed":2770,"user":{"displayName":"Sangkon Han","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiQsYWJn8z5Q-S2Cvsutdwzy6mD8-C0PRb5ZODrY5M=s64","userId":"11611818706289122316"}},"outputId":"6ae713c7-aff0-4c2e-8987-9707793b051b"},"source":["print(cancer.feature_names) # 이걸로 30개의 칼럼값이 무슨 네임인지확인가능"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['mean radius' 'mean texture' 'mean perimeter' 'mean area'\n"," 'mean smoothness' 'mean compactness' 'mean concavity'\n"," 'mean concave points' 'mean symmetry' 'mean fractal dimension'\n"," 'radius error' 'texture error' 'perimeter error' 'area error'\n"," 'smoothness error' 'compactness error' 'concavity error'\n"," 'concave points error' 'symmetry error' 'fractal dimension error'\n"," 'worst radius' 'worst texture' 'worst perimeter' 'worst area'\n"," 'worst smoothness' 'worst compactness' 'worst concavity'\n"," 'worst concave points' 'worst symmetry' 'worst fractal dimension']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4BypQEJhc3MK"},"source":["X = cancer.data[:500]\r\n","y = cancer.target[:500]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9d0MAqSQatMr"},"source":["## 로지스틱 회귀 모델"]},{"cell_type":"code","metadata":{"id":"iTJP9hXlaa2G"},"source":["class LogisticRegression:\r\n","  # 1. 회귀를 먼저 작성 (앞 시간 한거랑 똑같음)\r\n","  def __init__(self):\r\n","    self.w = None # 1.0 안주고 그냥 논으로 시작해도된다!\r\n","    self.b = None\r\n","\r\n","  def forpass(self, x):\r\n","    z = np.sum(x * self.w) + self.b # 다른건 다 똑같은데 이것만 다른거임   \r\n","    return z\r\n","\r\n","  def backprop(self, x, err):\r\n","    w_grad = x * err\r\n","    b_grad = 1 * err\r\n","    return w_grad, b_grad\r\n","\r\n","  # 2. 활성화 함수를 작성\r\n","  def activation(self, z): # 시그모이드 함수 (활성화 함수)\r\n","    z = np.clip(z, -100, None)\r\n","    a = 1 / (1 + np.exp(-z))\r\n","    return a\r\n","\r\n","  def fit(self, x, y, epochs=100): #100번 반복구문 작성\r\n","    self.w = np.ones(x.shape[1]) # none값 들어가면 값 안나와서 1값 주는거임\r\n","    self.b = 0\r\n","    for i in range(epochs):\r\n","      for x_i, y_i in zip(x,y):\r\n","        z = self.forpass(x_i)\r\n","        a = self.activation(z)\r\n","        err = -(y_i - a)\r\n","        w_grad, b_grad = self.backprop(x_i, err)\r\n","        self.w -= w_grad\r\n","        self.b -= b_grad\r\n","  \r\n","  # 3. 임계 함수를 작성 (이거 그 계단함수 : 분류해주는 기능)\r\n","  def predict(self, x):\r\n","    z = [self.forpass(x_i) for x_i in x]\r\n","    a = self.activation(np.array(z))\r\n","    return a > 0.5 # 맞으면 true 나옴. 임계함수는 학습이 아니라 결과를 출력할때 나오는ㄱ다"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8S25SmYuhqpm"},"source":["lr = LogisticRegression()\r\n","lr.fit(X,y) # 학습시키는거임"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sXi2cwgJhvul","executionInfo":{"status":"ok","timestamp":1609079502136,"user_tz":-540,"elapsed":699,"user":{"displayName":"Sangkon Han","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiQsYWJn8z5Q-S2Cvsutdwzy6mD8-C0PRb5ZODrY5M=s64","userId":"11611818706289122316"}},"outputId":"15e95993-898b-4c74-e5d8-c11e558311fa"},"source":["np.mean(lr.predict(cancer.data[501:]) == cancer.target[501:])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8970588235294118"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"rHjyLOy4h24W"},"source":[""],"execution_count":null,"outputs":[]}]}